{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/anuraghragidimilli/Desktop/IDEA/src/db/index.ts"],"sourcesContent":["import { drizzle } from 'drizzle-orm/neon-http'\n\nexport const db = drizzle(process.env.DATABASE_URL!)\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,KAAK,CAAA,GAAA,0JAAA,CAAA,UAAO,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///Users/anuraghragidimilli/Desktop/IDEA/src/db/schema.ts"],"sourcesContent":["import { pgTable, text, timestamp, boolean } from 'drizzle-orm/pg-core'\n\nexport const user = pgTable('user', {\n  id: text('id').primaryKey(),\n  name: text('name').notNull(),\n  email: text('email').notNull().unique(),\n  emailVerified: boolean('email_verified')\n    .$defaultFn(() => false)\n    .notNull(),\n  image: text('image'),\n  createdAt: timestamp('created_at')\n    .$defaultFn(() => /* @__PURE__ */ new Date())\n    .notNull(),\n  updatedAt: timestamp('updated_at')\n    .$defaultFn(() => /* @__PURE__ */ new Date())\n    .notNull(),\n})\n\nexport const session = pgTable('session', {\n  id: text('id').primaryKey(),\n  expiresAt: timestamp('expires_at').notNull(),\n  token: text('token').notNull().unique(),\n  createdAt: timestamp('created_at').notNull(),\n  updatedAt: timestamp('updated_at').notNull(),\n  ipAddress: text('ip_address'),\n  userAgent: text('user_agent'),\n  userId: text('user_id')\n    .notNull()\n    .references(() => user.id, { onDelete: 'cascade' }),\n})\n\nexport const account = pgTable('account', {\n  id: text('id').primaryKey(),\n  accountId: text('account_id').notNull(),\n  providerId: text('provider_id').notNull(),\n  userId: text('user_id')\n    .notNull()\n    .references(() => user.id, { onDelete: 'cascade' }),\n  accessToken: text('access_token'),\n  refreshToken: text('refresh_token'),\n  idToken: text('id_token'),\n  accessTokenExpiresAt: timestamp('access_token_expires_at'),\n  refreshTokenExpiresAt: timestamp('refresh_token_expires_at'),\n  scope: text('scope'),\n  password: text('password'),\n  createdAt: timestamp('created_at').notNull(),\n  updatedAt: timestamp('updated_at').notNull(),\n})\n\nexport const verification = pgTable('verification', {\n  id: text('id').primaryKey(),\n  identifier: text('identifier').notNull(),\n  value: text('value').notNull(),\n  expiresAt: timestamp('expires_at').notNull(),\n  createdAt: timestamp('created_at').$defaultFn(\n    () => /* @__PURE__ */ new Date()\n  ),\n  updatedAt: timestamp('updated_at').$defaultFn(\n    () => /* @__PURE__ */ new Date()\n  ),\n})\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;;AAEO,MAAM,OAAO,CAAA,GAAA,uJAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;IAClC,IAAI,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,MAAM,UAAU;IACzB,MAAM,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,OAAO;IAC1B,OAAO,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,SAAS,OAAO,GAAG,MAAM;IACrC,eAAe,CAAA,GAAA,oKAAA,CAAA,UAAO,AAAD,EAAE,kBACpB,UAAU,CAAC,IAAM,OACjB,OAAO;IACV,OAAO,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE;IACZ,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAClB,UAAU,CAAC,IAAM,aAAa,GAAG,IAAI,QACrC,OAAO;IACV,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAClB,UAAU,CAAC,IAAM,aAAa,GAAG,IAAI,QACrC,OAAO;AACZ;AAEO,MAAM,UAAU,CAAA,GAAA,uJAAA,CAAA,UAAO,AAAD,EAAE,WAAW;IACxC,IAAI,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,MAAM,UAAU;IACzB,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,OAAO;IAC1C,OAAO,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,SAAS,OAAO,GAAG,MAAM;IACrC,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,OAAO;IAC1C,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,OAAO;IAC1C,WAAW,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE;IAChB,WAAW,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE;IAChB,QAAQ,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,WACV,OAAO,GACP,UAAU,CAAC,IAAM,KAAK,EAAE,EAAE;QAAE,UAAU;IAAU;AACrD;AAEO,MAAM,UAAU,CAAA,GAAA,uJAAA,CAAA,UAAO,AAAD,EAAE,WAAW;IACxC,IAAI,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,MAAM,UAAU;IACzB,WAAW,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,cAAc,OAAO;IACrC,YAAY,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,eAAe,OAAO;IACvC,QAAQ,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,WACV,OAAO,GACP,UAAU,CAAC,IAAM,KAAK,EAAE,EAAE;QAAE,UAAU;IAAU;IACnD,aAAa,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE;IAClB,cAAc,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE;IACnB,SAAS,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE;IACd,sBAAsB,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE;IAChC,uBAAuB,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE;IACjC,OAAO,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE;IACZ,UAAU,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE;IACf,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,OAAO;IAC1C,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,OAAO;AAC5C;AAEO,MAAM,eAAe,CAAA,GAAA,uJAAA,CAAA,UAAO,AAAD,EAAE,gBAAgB;IAClD,IAAI,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,MAAM,UAAU;IACzB,YAAY,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,cAAc,OAAO;IACtC,OAAO,CAAA,GAAA,iKAAA,CAAA,OAAI,AAAD,EAAE,SAAS,OAAO;IAC5B,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,OAAO;IAC1C,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,UAAU,CAC3C,IAAM,aAAa,GAAG,IAAI;IAE5B,WAAW,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,UAAU,CAC3C,IAAM,aAAa,GAAG,IAAI;AAE9B","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/anuraghragidimilli/Desktop/IDEA/src/lib/auth.ts"],"sourcesContent":["import { betterAuth } from 'better-auth'\n\nimport { drizzleAdapter } from 'better-auth/adapters/drizzle'\n\nimport { db } from '@/db'\n\nimport * as schema from '@/db/schema'\n\nexport const auth = betterAuth({\n  database: drizzleAdapter(db, {\n    provider: 'pg',\n    schema: {\n      ...schema,\n    },\n  }),\n  emailAndPassword: {\n    enabled: true,\n  },\n  // socialProviders: {\n  //   github: {\n  //     clientId: process.env.GITHUB_CLIENT_ID as string,\n  //     clientSecret: process.env.GITHUB_CLIENT_SECRET as string,\n  //   },\n  //   google: {\n  //     clientId: process.env.GOOGLE_CLIENT_ID as string,\n  //     clientSecret: process.env.GOOGLE_CLIENT_SECRET as string,\n  //   },\n  // },\n})\n"],"names":[],"mappings":";;;AAAA;AAAA;AAEA;AAEA;AAEA;;;;;AAEO,MAAM,OAAO,CAAA,GAAA,kKAAA,CAAA,aAAU,AAAD,EAAE;IAC7B,UAAU,CAAA,GAAA,oLAAA,CAAA,iBAAc,AAAD,EAAE,oHAAA,CAAA,KAAE,EAAE;QAC3B,UAAU;QACV,QAAQ;YACN,GAAG,qHAAM;QACX;IACF;IACA,kBAAkB;QAChB,SAAS;IACX;AAWF","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/anuraghragidimilli/Desktop/IDEA/src/app/api/auth/%5B...all%5D/route.ts"],"sourcesContent":["import { auth } from '@/lib/auth' // path to your auth file\nimport { toNextJsHandler } from 'better-auth/next-js'\n\nexport const { POST, GET } = toNextJsHandler(auth)\n"],"names":[],"mappings":";;;;AAAA,0MAAkC,yBAAyB;AAC3D;;;AAEO,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAA,GAAA,uKAAA,CAAA,kBAAe,AAAD,EAAE,oHAAA,CAAA,OAAI","debugId":null}}]
}